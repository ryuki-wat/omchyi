{"ast":null,"code":"import _asyncToGenerator from \"E:/Ionic+angular TOTAcademy/OMCHYI/omchyi/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Chart } from 'chart.js';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"../shared/data.service\";\nimport * as i3 from \"@angular/common\";\nconst _c0 = [\"barChart\"];\nfunction IpphonePage_ion_item_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 7)(1, \"ion-badge\", 10);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ion-label\")(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const R_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(R_r2 == null ? null : R_r2.total);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", R_r2 == null ? null : R_r2.province, \" \");\n  }\n}\nexport let IpphonePage = /*#__PURE__*/(() => {\n  class IpphonePage {\n    constructor(navCtrl, ds, loadingController) {\n      this.navCtrl = navCtrl;\n      this.ds = ds;\n      this.loadingController = loadingController;\n      this.page = 1;\n      this.limit = 18;\n      this.Results = [];\n    }\n    ngOnInit() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        //หมุนก่อน subscribe\n        _this.loading = yield _this.loadingController.create({\n          message: 'กำลังโหลด...'\n        });\n        yield _this.loading.present();\n        _this.getIpphone();\n      })();\n    }\n    getIpphone(event) {\n      var _this2 = this;\n      //get again\n      this.sub = this.ds.getIpphone(this.page, this.limit).subscribe(res => {\n        this.Results = res.data.ipphone;\n        this.totalItem = res.data.totalItems;\n        this.province = this.Results.map(data => data.province);\n        this.dataApi = this.Results.map(data => data.total);\n        // console.log(this.province)\n        //console.log(this.dataApi)\n        this.generateColorArray(this.totalItem);\n        this.createBarChart(this.province, this.dataApi, this.colorArray);\n      }, /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (error) {\n          //หายไปตอนerror\n          yield _this2.loading.dismiss(); //loading\n        });\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }(), /*#__PURE__*/_asyncToGenerator(function* () {\n        //หายไปตอนสมบูรณ์\n        yield _this2.loading.dismiss();\n      }));\n    }\n    doRefresh(event) {\n      //refresh \n      //enable infinite scroll\n      event.target.complete();\n      //refresh ให้ไปget news มาใหม่ ใส่ event ให้หายโหลด\n      this.getIpphone(event);\n    }\n    ngOnDestroy() {\n      //clear memory\n      this.sub.unsubscribe();\n    }\n    ionViewDidEnter() {}\n    generateColorArray(num) {\n      this.colorArray = [];\n      for (let i = 0; i < num; i++) {\n        this.colorArray.push('#' + Math.floor(Math.random() * 16777215).toString(16));\n      }\n    }\n    createBarChart(p, d, c) {\n      this.bars = new Chart(this.barChart.nativeElement, {\n        type: 'pie',\n        data: {\n          labels: p,\n          datasets: [{\n            label: 'Ipphone PPPOE',\n            data: d,\n            backgroundColor: c,\n            // array should have same number of elements as number of dataset\n            borderColor: 'rgb(0,0,0)',\n            // array should have same number of elements as number of dataset\n            borderWidth: 2,\n            yAxisID: 'yAxis'\n          }]\n        },\n        options: {\n          scales: {\n            yAxis: [{\n              ticks: {\n                beginAtZero: true\n              }\n            }]\n          }\n        }\n      });\n    }\n    home() {\n      this.navCtrl.navigateRoot(['']);\n    }\n    static #_ = this.ɵfac = function IpphonePage_Factory(t) {\n      return new (t || IpphonePage)(i0.ɵɵdirectiveInject(i1.NavController), i0.ɵɵdirectiveInject(i2.DataService), i0.ɵɵdirectiveInject(i1.LoadingController));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: IpphonePage,\n      selectors: [[\"app-ipphone\"]],\n      viewQuery: function IpphonePage_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.barChart = _t.first);\n        }\n      },\n      decls: 22,\n      vars: 1,\n      consts: [[\"barChart\", \"\"], [\"slot\", \"start\"], [\"slot\", \"end\"], [3, \"click\"], [\"slot\", \"icon-only\", \"name\", \"home\"], [\"slot\", \"fixed\", 3, \"ionRefresh\"], [\"pullingIcon\", \"chevron-down-circle-outline\", \"pullingText\", \"Pull to refresh\", \"refreshingSpinner\", \"lines\", \"refreshingText\", \"Refreshing...\"], [\"color\", \"dark\"], [1, \"chart\"], [\"color\", \"dark\", 4, \"ngFor\", \"ngForOf\"], [\"color\", \"red\", \"slot\", \"end\"]],\n      template: function IpphonePage_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\");\n          i0.ɵɵtext(3, \"Ipphone pppoe chart\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"ion-buttons\", 1);\n          i0.ɵɵelement(5, \"ion-back-button\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"ion-buttons\", 2)(7, \"ion-button\", 3);\n          i0.ɵɵlistener(\"click\", function IpphonePage_Template_ion_button_click_7_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.home());\n          });\n          i0.ɵɵelement(8, \"ion-icon\", 4);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(9, \"ion-content\")(10, \"ion-refresher\", 5);\n          i0.ɵɵlistener(\"ionRefresh\", function IpphonePage_Template_ion_refresher_ionRefresh_10_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.doRefresh($event));\n          });\n          i0.ɵɵelement(11, \"ion-refresher-content\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"ion-card\", 7);\n          i0.ɵɵelement(13, \"canvas\", 8, 0);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"ion-card\")(16, \"ion-list-header\", 7)(17, \"ion-label\");\n          i0.ɵɵtext(18, \"\\u0E08\\u0E31\\u0E07\\u0E2B\\u0E27\\u0E31\\u0E14\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"ion-button\");\n          i0.ɵɵtext(20, \"\\u0E27\\u0E07\\u0E08\\u0E23FTTX\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(21, IpphonePage_ion_item_21_Template, 6, 2, \"ion-item\", 9);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(21);\n          i0.ɵɵproperty(\"ngForOf\", ctx.Results);\n        }\n      },\n      dependencies: [i3.NgForOf, i1.IonBadge, i1.IonButton, i1.IonButtons, i1.IonCard, i1.IonContent, i1.IonHeader, i1.IonIcon, i1.IonItem, i1.IonLabel, i1.IonListHeader, i1.IonRefresher, i1.IonRefresherContent, i1.IonTitle, i1.IonToolbar, i1.IonBackButton]\n    });\n  }\n  return IpphonePage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}