{"ast":null,"code":"import _asyncToGenerator from \"E:/Ionic+angular TOTAcademy/OMCHYI/omchyi/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { MapInfoWindow } from '@angular/google-maps';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic-native/geolocation/ngx\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@ionic/angular\";\nimport * as i4 from \"@angular/google-maps\";\nfunction GmapPage_map_marker_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"map-marker\", 7, 0);\n    i0.ɵɵlistener(\"mapClick\", function GmapPage_map_marker_10_Template_map_marker_mapClick_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const marker_r2 = i0.ɵɵreference(1);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.openInfoWindow(marker_r2));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const markerPosition_r4 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"position\", markerPosition_r4)(\"options\", ctx_r2.markerOptions);\n  }\n}\nexport let GmapPage = /*#__PURE__*/(() => {\n  class GmapPage {\n    addMarker(event) {\n      this.markerPositions.push(event.latLng.toJSON());\n      // console.log(this.markInfo.lat)\n      // console.log(this.markerPositions)\n      this.markInfo = event.latLng.toJSON();\n      //console.log(this.markInfo)\n      this.lati = this.markInfo.lat;\n      this.lngi = this.markInfo.lng;\n    }\n    openInfoWindow(marker) {\n      this.infoWindow.open(marker);\n    }\n    constructor(geolocation) {\n      this.geolocation = geolocation;\n      this.markerPositions = [];\n      this.markerOptions = {\n        draggable: false,\n        animation: google.maps.Animation.DROP,\n        label: 'NT ญลภก.3(หญ.)'\n      };\n      this.zoom = 16;\n    }\n    ngOnInit() {}\n    ionViewWillEnter() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        _this.getWatchLocation();\n      })();\n    }\n    getWatchLocation() {\n      this.sub = this.geolocation.watchPosition().subscribe(position => {\n        this.lat = position.coords.latitude;\n        this.lon = position.coords.longitude;\n        this.center = {\n          lat: this.lat,\n          lng: this.lon\n        };\n        this.markerPositions.push(this.center);\n        // console.log(this.lat)\n        // console.log(this.lon) \n        // console.log(position) \n      }, error => console.log(error));\n    }\n    doRefresh(event) {\n      //refresh ต้องมาหน้าแรก\n      //enable infinite scroll\n      if (this.event) {\n        this.event.target.disabled = false;\n      }\n      ;\n      event.target.complete();\n      //refresh ให้ไปget news มาใหม่ ใส่ event หายโหลด\n      this.markerPositions = [];\n      this.markerPositions = [this.center];\n    }\n    ngOnDestroy() {\n      this.markerPositions = [];\n      this.sub.unsubscribe();\n    }\n    static #_ = this.ɵfac = function GmapPage_Factory(t) {\n      return new (t || GmapPage)(i0.ɵɵdirectiveInject(i1.Geolocation));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: GmapPage,\n      selectors: [[\"app-gmap\"]],\n      viewQuery: function GmapPage_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(MapInfoWindow, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.infoWindow = _t.first);\n        }\n      },\n      decls: 15,\n      vars: 11,\n      consts: [[\"marker\", \"mapMarker\"], [\"color\", \"grey\"], [\"slot\", \"start\"], [\"slot\", \"fixed\", 3, \"ionRefresh\"], [\"pullingIcon\", \"chevron-down-circle-outline\", \"pullingText\", \"Pull to refresh\", \"refreshingSpinner\", \"lines\", \"refreshingText\", \"Refreshing...\"], [\"height\", \"80%\", \"width\", \"100%\", 3, \"mapClick\", \"center\", \"zoom\"], [3, \"position\", \"options\", \"mapClick\", 4, \"ngFor\", \"ngForOf\"], [3, \"mapClick\", \"position\", \"options\"]],\n      template: function GmapPage_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\", 1);\n          i0.ɵɵtext(3, \"\\u0E41\\u0E1C\\u0E19\\u0E17\\u0E35\\u0E48\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"ion-buttons\", 2);\n          i0.ɵɵelement(5, \"ion-menu-button\", 1);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(6, \"ion-content\")(7, \"ion-refresher\", 3);\n          i0.ɵɵlistener(\"ionRefresh\", function GmapPage_Template_ion_refresher_ionRefresh_7_listener($event) {\n            return ctx.doRefresh($event);\n          });\n          i0.ɵɵelement(8, \"ion-refresher-content\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"google-map\", 5);\n          i0.ɵɵlistener(\"mapClick\", function GmapPage_Template_google_map_mapClick_9_listener($event) {\n            return ctx.addMarker($event);\n          });\n          i0.ɵɵtemplate(10, GmapPage_map_marker_10_Template, 2, 2, \"map-marker\", 6);\n          i0.ɵɵelementStart(11, \"map-info-window\");\n          i0.ɵɵtext(12);\n          i0.ɵɵpipe(13, \"number\");\n          i0.ɵɵpipe(14, \"number\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"center\", ctx.center)(\"zoom\", ctx.zoom);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngForOf\", ctx.markerPositions);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate2(\" lat: \", i0.ɵɵpipeBind2(13, 5, ctx.lati, \"1.0-4\"), \" lng: \", i0.ɵɵpipeBind2(14, 8, ctx.lngi, \"1.0-4\"), \" \");\n        }\n      },\n      dependencies: [i2.NgForOf, i3.IonButtons, i3.IonContent, i3.IonHeader, i3.IonMenuButton, i3.IonRefresher, i3.IonRefresherContent, i3.IonTitle, i3.IonToolbar, i4.GoogleMap, i4.MapInfoWindow, i4.MapMarker, i2.DecimalPipe]\n    });\n  }\n  return GmapPage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}